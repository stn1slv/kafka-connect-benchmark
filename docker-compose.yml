version: '3.9'

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:6.1.1
        container_name: zookeeper
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181
            - ZOOKEEPER_TICK_TIME=2000
            - ZOOKEEPER_SYNC_LIMIT=2
        ports:
            - 2181:2181
        profiles:
            - all-in-one
            - kafka
    kafka:
        image: confluentinc/cp-kafka:6.1.1
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - 9092:9092
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_NUM_PARTITIONS=32
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
        profiles:
            - all-in-one
            - kafka

    connect:
      image: confluentinc/cp-kafka-connect:6.1.1
      hostname: connect
      container_name: connect
      depends_on:
        - zookeeper
        - kafka
      ports:
        - 8083:8083
      environment:
        CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
        CONNECT_REST_PORT: 8083
        CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
        CONNECT_GROUP_ID: compose-connect-group
        CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
        CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
        CONNECT_STATUS_STORAGE_TOPIC: connect-status
        CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
        CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
        CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.converters.ByteArrayConverter"
        CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.converters.ByteArrayConverter"
        CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
        CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
        CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
        CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
        CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
        CONNECT_PLUGIN_PATH: '/usr/share/java'
      volumes:
        - ./kafka-sink-connector/target/components/packages/you-kafka-connect-simple-sink-0.2.0/you-kafka-connect-simple-sink-0.2.0/lib:/usr/share/java/kafka-connect-sample
      profiles:
        - all-in-one
        - connect
    
    simple-camel-kafka-adapter:
        image: stn1slv/simple-camel-kafka-adapter 
        container_name: simple-camel-kafka-adapter
        restart: unless-stopped
        environment:
            brokers: kafka:9092
        profiles:
            - all-in-one
            - spring-boot

    prometheus:
        image: prom/prometheus:v2.27.1
        container_name: prometheus
        restart: unless-stopped
        volumes:
            - ./infra/prometheusConfig.yml:/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090      
        profiles:
            - all-in-one
            - infra
    grafana:
        image: grafana/grafana:7.5.9   
        container_name: grafana
        restart: unless-stopped
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin
        ports:
            - 3000:3000
        volumes:
            - ./infra/provisioning/dashboards/:/etc/grafana/provisioning/dashboards/
            - ./infra/provisioning/datasources/:/etc/grafana/provisioning/datasources/
        profiles:
            - all-in-one
            - infra
    kafka-lag-exporter:
        image: lightbend/kafka-lag-exporter:0.6.7 
        container_name: kafka-lag-exporter
        restart: unless-stopped
        ports:
            - 8000:8000
        volumes:
            - ./infra/kafka-lag-exporter.conf:/opt/docker/conf/kafka-lag-exporter.conf
        command: /opt/docker/bin/kafka-lag-exporter -Dconfig.file=/opt/docker/conf/kafka-lag-exporter.conf
        profiles:
            - all-in-one
            - infra

